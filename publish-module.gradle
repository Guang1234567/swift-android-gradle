apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId PUBLISH_ARTIFACT_ID
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            // Mostly self-explanatory metadata
            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'Swift Android Gradle plugin'
                url = 'https://github.com/readdle/swift-android-gradle'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/readdle/swift-android-gradle/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'andriydruk'
                        name = 'Andrew Druk'
                        email = 'adruk@readdle.com'
                    }
                }

                // Version control info - if you're using GitHub, follow the
                // format as seen here
                scm {
                    connection = 'scm:git:github.com/readdle/swift-android-gradle.git'
                    developerConnection = 'scm:git:ssh://github.com/readdle/swift-android-gradle.git'
                    url = 'https://github.com/readdle/swift-android-gradle'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir('../../../maven_repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('../../../maven_repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

//signing {
//    sign publishing.publications.mavenJava
//}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}